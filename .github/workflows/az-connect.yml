name: Run Azure Login - OIDC
on: [workflow_dispatch]

permissions:
      id-token: write
      contents: read

jobs: 
  install-dependencies:
    name: Install dependencies
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install from PSGallery
        shell: pwsh
        run: |
          Set-PSRepository PSGallery -InstallationPolicy Trusted
          Install-Module AzureAD     
          $path = (Get-Module -ListAvailable Az*) |Select-Object Path,Version, Name |Where-Object -Property "Name" -EQ -Value "AzureAD"
          $($path.Path)
          $moduleBasePath = "C:\Modules\"
          if(Test-Path -Path "$moduleBasePath\$($path.Name.ToLower())_$($path.Version)"){
              Write-Output "'$moduleBasePath\$($path.Name.ToLower())_$($path.Version)' path already exists"
          }else{    
              Write-Output "Creating folder '$($path.Name.ToLower())_$($path.Version)' inside path '$moduleBasePath'"
              MKDIR "$moduleBasePath\$($path.Name.ToLower())_$($path.Version)"    
          }
          $replaceString = "\$($path.Version)\$($path.Name).psd1"
          $modulePath = $($path.Path).Replace($replaceString,"")
          if(Test-Path -Path "$moduleBasePath\$($path.Name.ToLower())_$($path.Version)\$($path.Name)\$replaceString"){
              Write-Output "'$($path.Path)' path already exists"
          }else{              
              Copy-Item -Path $modulePath -Destination "$moduleBasePath\$($path.Name.ToLower())_$($path.Version)" -Recurse
          }

  Windows-latest:
      runs-on: windows-latest
      steps:
        - name: OIDC Login to Azure Public Cloud with AzPowershell (enableAzPSSession true)
          uses: azure/login@v1
          with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }} 
            enable-AzPSSession: true

        - name: 'Get RG with powershell action'
          uses: azure/powershell@v1
          with:
             inlineScript: |   
               $path = (Get-Module -ListAvailable Az*) |Select-Object Path,Version, Name |Where-Object -Property "Name" -EQ -Value "AzureAD"
               $($path.Path)
               Import-Module "$($path.Path)"     
               Get-AzureADUser -All
               Get-AzResourceGroup 
             azPSVersion: "latest"